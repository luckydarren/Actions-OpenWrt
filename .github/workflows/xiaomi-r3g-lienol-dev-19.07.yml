#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Lienol's OpenWrt dev-19.07

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - 'xiaomi-r3g/lienol/dev-19.07/.config'
  schedule:
    - cron: 0 2 * * 3
    #每周三10点编译
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: dev-19.07
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: xiaomi-r3g/lienol/dev-19.07/.config
  DIY_P1_SH: xiaomi-r3g/lienol/dev-19.07/diy-part1.sh
  DIY_P2_SH: xiaomi-r3g/lienol/dev-19.07/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_PACKAGES: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        ../$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        ../$DIY_P2_SH

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"
        
    - name: Upload packages directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_PACKAGES == 'true'
      with:
        name: OpenWrt_packages${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin/packages

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
        
    - name: Upload packages to cowtransfer
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && env.UPLOAD_PACKAGES == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress openwrt/bin/packages 2>&1 | tee cowtransfer_packages.log
        echo "::warning file=packages_cowtransfer.com::$(cat cowtransfer_packages.log | grep https)"
        
    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer_firmware.log
        echo "::warning file=firmware_cowtransfer.com::$(cat cowtransfer_firmware.log | grep https)"
        
    - name: Upload packages to WeTransfer
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && env.UPLOAD_PACKAGES == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress openwrt/bin/packages 2>&1 | tee wetransfer_packages.log
        echo "::warning file=packages_wetransfer.com::$(cat wetransfer_packages.log | grep https)"
        
    - name: Upload firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer_firmware.log
        echo "::warning file=firmware_wetransfer.com::$(cat wetransfer_firmware.log | grep https)"
